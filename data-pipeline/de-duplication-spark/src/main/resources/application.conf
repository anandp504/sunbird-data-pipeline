
kafka {
  input.topic = "k8s.telemetry.valid"
  output.success.topic = "k8s.telemetry.unique"
  output.duplicate.topic = "k8s.telemetry.duplicate"
  output.malformed.topic = "k8s.telemetry.malformed"
  # broker-servers = "172.16.0.239:9092"
  # zookeeper = "172.16.0.239:2181"
  # dev-environment
  broker-servers = "11.2.1.15:9092"
  zookeeper = "11.2.1.15:2181"
  groupId = "telemetry-deduplication-spark-group"
}

task {
  parallelism = 2
  checkpointing.interval = 60000
  microbatch.interval = 10
}

dedup.producer.included.ids = ["prod.diksha.portal", "prod.sunbird.desktop"]

redis {
  # host = 172.16.0.239
  # dev-environment
  host = 11.2.4.22
  port = 6379
  connection {
    max = 2
    idle.min = 1
    idle.max = 2
    minEvictableIdleTimeSeconds = 120
    timeBetweenEvictionRunsSeconds = 300
  }
  database {
    duplicationstore.id = 12
    key.expiry.seconds = 3600
  }
}